<p>Босим n раз монету, пусть m раз выпал орел.
f = m/n -  частота выпадения орла.
Это - слуайная величина, 
Исследуем ее при помощи компьютерной симуляции. 
Для этого нам понадобится модуль random, он содержит 
генераторы пседвосучайнцх значений.
Например</p>
<pre>
from random import choices
res = choices([0, 1], k = 10)
print(res)
</pre>
<p>res будет содержать списко из k нулей и единиц,
сгенерированных псевдо случайно.</p>
<p>[1, 0, 1, 1, 1, 0, 1, 0, 1, 0]</p>
</p>Единицу будем считать выпадением орла на монете,
а 0 - решки.
<pre>
def flips(nFlips):
	'''nFlips число бросаний монеты,
	возвращает h - частоту выпадения орла.'''
	res = choices([0, 1], k = nFlips)
	h = sum(res)/nFlips #sum(res) число выпадений орла 
	return  h
</pre>
<p>Для начла будем бросать по 10 раз и записывать частоту.
Проведём это опыт 8 раз.</p>
<pre>
res = [flips(10) for k in range(8)]
print(res)
</pre>
<p>получили</p>
<p>[0.5, 0.4, 0.6, 0.5, 0.7, 0.3, 0.8, 0.6]</p>
<p>Мы видим что частота имеет сильно различающиеся значения.
разница между самым большыи 0.8 и самым маленьким 0.3, 
равна 0.5.</p> 
<p>Будем бросать монету 1000 раз и записывать частоту.</p>
<pre>
res = [flips(1000) for k in range(8)]
print(res)
</pre>
<p>получили</p>
<p>[0.515, 0.484, 0.522, 0.498, 0.498, 0.513, 0.511, 0.486]</p>
<p>Значения близки к 0.5, их разброс стал гораздо меньше.
Самая большая разница равна 0.038.
Мы получили, что при увеличении числа бросаний,
частота стремиться к некоторому пределу, 
назовём его  вероятностью выпадения орла.
</p>


<p>Выпадение орла или решки называют элементарными событиями. 
При бросании куибика элементарными событием будет, например,
выпадение 1. Все элементарные события образуют пространство
событий. 
Всякое подмножество в пространстве
событий будем называть событием. 
Так событие выподение чётного числа на кубике - это 
подмножество [2, 4, 6].
Распределение вероятности сопоставляет 
каждому событию его вероятность.
</p>
<p>На событиях мы можем задать операции сложения и умножения.
Для обозначения суммы будем использовать или плюс или \(\cup)\).
\(A \cup \B\) произошло A или B.  
\(A \cap \B\) - произведение собтыи, произошло A и B. </p>
<p>Свойства вероятности. 
Если \(A\) и \(B\) события и \(A * B= \varnothing\)
$$
	P(A + B) = P(A) + P(B) 
$$
</p>

<p>Чтобы придать понятию точность понятию дискретное распределние
определим его в языке python. </p>
<pre><code>
<<ddist.py>>=
class DDist:
	def __init__(self, dictionary):
		self.d = dictionary
	def draw(self):
		x = random()
		help = 0
		for k in self.d:
			help += self.d[k]
			if help > x:
				return k
</code>
</pre>

