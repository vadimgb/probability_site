<p>Босим n раз монету, пусть m раз выпла орел.
f = m/n -  частота выпадения орла.
Частота слуайная величина. 
Оказывается, что она подчиняется некоторым законам.
Проведм компьютерную симуляцию.
Модуль random содержит генераторы пседвосучайнцх значений.
Например</p>
<pre>
from random import choices
res = choices([0, 1], k = 10)
print(res)
</pre>
<p>res будет содержать списко из k нулей и единиц,
сгенерированных псевдо случайно.</p>
<p>[1, 0, 1, 1, 1, 0, 1, 0, 1, 0]</p>
</p>Единицу будем считать выпадением орла на монете,
а 0 - решки.
<pre>
def flips(nFlips):
	'''nFlips число бросаний монеты,
	возвращает h - частоту выпадения орла.'''
	res = choices([0, 1], k = nFlips)
	h = sum(res)/nFlips #sum(res) число выпадений орла 
	return  h
</pre>
<p>Для начла будем бросать по 10 раз и записывать частоту.
Проведём это опыт 8 раз.</p>
<pre>
res = [flips(10) for k in range(8)]
print(res)
</pre>
<p>получили</p>
<p>[0.5, 0.4, 0.6, 0.5, 0.7, 0.3, 0.8, 0.6]</p>
<p>Мы видим что частота имеет сильно различающиеся значения.
разница между самым большыи 0.8 и самым маленьким 0.3, 
равна 0.5.</p> 
<p>Будем бросать монету 1000 раз и записывать частоту.</p>
<pre>
res = [flips(1000) for k in range(8)]
print(res)
</pre>
<p>получили</p>
<p>[0.515, 0.484, 0.522, 0.498, 0.498, 0.513, 0.511, 0.486]</p>
<p>Значения полученные близки к 0.5, их разброс стал гораздо меньше.
Самая большая разница равна 0.038.
Из эксперимента мы получили, что при увеличении числа бросаний,
частота стремиться к некоторому пределу, 
назовём его  вероятностью выпадения орла.
</p>


<p>При бросании куибика может выпасть 1, 2, 3, 4, 5, 6.
Такие собыитя мы будем называть элементарными. Вместе они
оразуют пространство событий. Всякое подмножество в пространстве
событий будем называть событием. Так выподение четного числа на кубики это не элементарное событие.
Вероятность -- это функция сопоставляющая каждому событию число, 
вероятность события. Вероятность связыана с частотой события. Так если
мы будем бросать кубик много раз, то частота выпадения грани будет близка к вероятности. Отклоения буду малы и редки. 
Свойства вероятности. 
Если \(A\) и \(B\) события и \(A * B= \varnothing\)
$$
	P(A + B) =P(A) + P(B) 
$$
</p>

<p>На python класс для дискретного распределния.</p>
<pre><code>
<<ddist.py>>=
class DDist:
	def __init__(self, dictionary):
		self.d = dictionary
	def draw(self):
		x = random()
		help = 0
		for k in self.d:
			help += self.d[k]
			if help > x:
				return k
</code>
</pre>

<img src = "fig.png">

